{"version":3,"file":"static/js/134.d9a0fc02.chunk.js","mappings":";2MAIe,SAASA,EAAUC,GAAa,IAAVC,EAAKD,EAALC,MAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,GACCA,EAAMK,KAAI,SAAAC,GAAoB,IAAjBC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAClB,OACEL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMZ,GAAWG,SAClDG,KAFIC,EAMb,KAGR,qBCiBA,IAAMM,EAAM,CAAEC,QApCb,WACC,OACIC,MAAM,6FAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAExC,EA8BuBC,YA7BvB,SAAqBC,GAChB,OACIL,MAAM,sCAADL,OACqCU,EAAO,8CACpDJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACtC,EAwBoCG,gBArBpC,SAAyBD,GACrB,OACIL,MAAM,sCAADL,OAAuCU,EAAO,sDAC9CJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,EAeqDI,WAdrD,SAAoBF,GAChB,OACIL,MAAM,sCAADL,OAAuCU,EAAO,sDAC9CJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,EAQiEK,iBAPjE,SAA0BC,GACtB,OACIT,MAAM,mDAADL,OAAoDc,EAAK,kEACzDR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,GAEA,iIC/Be,SAASO,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,IAAgB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCR,EAAKU,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA0BH,EAAAA,EAAAA,UAAS,IAAGI,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BrC,EAAKsC,EAAA,GAAEC,EAAQD,EAAA,GAEhBE,EAAST,EAAOU,IAAI,UA4B1B,OArBAC,EAAAA,EAAAA,YAAU,WACHjB,GAGLX,EAAAA,EAAAA,iBAAqBW,GAClBR,MAAK,SAAA0B,GACJJ,EAASI,EAAKC,QAChB,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,GAAG,CAACrB,IACJsB,QAAQE,IAAIjD,IAYVkD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA/C,SAAA,EACE8C,EAAAA,EAAAA,MAAA,QAAME,OAAO,GAAGC,QA5BpB,SAAuBC,GACrBA,EAAMC,iBACNnB,EAASI,EACX,EAyB2CpC,SAAA,EACrCD,EAAAA,EAAAA,KAAA,SAAOqD,KAAK,OAAOC,MAAa,OAANjB,QAAM,IAANA,EAAAA,EAAU,GAAIkB,SAb9C,SAAsBJ,GACpB,GAA2B,KAAvBA,EAAMK,OAAOF,MACf,OAAOzB,EAAU,CAAC,GAEpBA,EAAU,CAAEQ,OAAQc,EAAMK,OAAOF,OACnC,KASMtD,EAAAA,EAAAA,KAAA,UAAQqD,KAAK,SAAQpD,SAAC,eAGzBD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,MAAOA,MAMxB","sources":["components/MoviesList.jsx","filmAPI.js","pages/Movies.jsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useLocation} from 'react-router-dom';\n\nexport default function MoviesList({ films }) {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {films &&\n        films.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","\n\n function filmAPI(){\n  return (\n      fetch(\n          `https://api.themoviedb.org/3/trending/movie/week?api_key=8817625a99e963f36ab0e1c9bab55397`\n      ).then(response => response.json())\n  )\n}\nfunction getFilmById(movieId) {\n     return (\n         fetch(\n             `https://api.themoviedb.org/3/movie/${movieId}?api_key=8817625a99e963f36ab0e1c9bab55397`\n    ).then(response => response.json()))\n}\n\n// /movies/get-movie-details \nfunction getMovieCredits(movieId) {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    )\n    \n}\nfunction getReviews(movieId) {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    ) \n    \n}\nfunction getMovieToSearch(query) {\n    return (\n        fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    )\n\n}\nconst API = { filmAPI, getFilmById, getMovieCredits, getReviews, getMovieToSearch }\nexport default API\n","import MoviesList from 'components/MoviesList';\nimport API from 'filmAPI';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {  useSearchParams } from 'react-router-dom';\n\n\nexport default function Movies() {\n  const [search, setSearch] = useSearchParams('');\n  const [query, setQuery] = useState(null);\n  const [films, setFilms] = useState([]);\n \n  const query1 = search.get('query1');\n\n  function onSearchMovie(event) {\n    event.preventDefault();\n    setQuery(query1);\n  }\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    API.getMovieToSearch(query)\n      .then(data => {\n        setFilms(data.results);\n      })\n      .catch(err => console.error(err));\n  }, [query]);\n  console.log(films);\n  function updateSearch(event) {\n    if (event.target.value === '') {\n      return setSearch({});\n    }\n    setSearch({ query1: event.target.value });\n  }\n  // if (query.trim() === '') {\n  //   return alert('Please, enter the name of the movie!');\n  // }\n\n  return (\n    <>\n      <form action=\"\" onClick={onSearchMovie}>\n        <input type=\"text\" value={query1 ?? ''} onChange={updateSearch} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n     <MoviesList films={films}/>\n      {/* //   (\n      //   <p>The movie you are looking for was not found</p>\n      // ) */}\n    </>\n  );\n}\n//! перевірки на пустуй пошуковик, перевірку чи прийшли данні,\n//TODO: стандартна картинка коли нічого не підгрузилось,\n//TODO:  якщо прийшов пустий масив то виводимо альорт\n//TODO: якщо  прийшла помилка запиту виводимо альорт\n//TODO: коли ввели пробіли в пошуковик\n//TODO:  коли нічого не знайшло по запиту\n"],"names":["MoviesList","_ref","films","location","useLocation","_jsx","children","map","_ref2","title","id","Link","to","concat","state","from","API","filmAPI","fetch","then","response","json","getFilmById","movieId","getMovieCredits","getReviews","getMovieToSearch","query","Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","search","setSearch","_useState","useState","_useState2","setQuery","_useState3","_useState4","setFilms","query1","get","useEffect","data","results","catch","err","console","error","log","_jsxs","_Fragment","action","onClick","event","preventDefault","type","value","onChange","target"],"sourceRoot":""}