{"version":3,"file":"static/js/884.d2560db4.chunk.js","mappings":"oIAsCA,IAAMA,EAAM,CAAEC,QApCb,WACC,OACIC,MAAM,6FAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAExC,EA8BuBC,YA7BvB,SAAqBC,GAChB,OACIL,MAAM,sCAADM,OACqCD,EAAO,8CACpDJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACtC,EAwBoCI,gBArBpC,SAAyBF,GACrB,OACIL,MAAM,sCAADM,OAAuCD,EAAO,sDAC9CJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,EAeqDK,WAdrD,SAAoBH,GAChB,OACIL,MAAM,sCAADM,OAAuCD,EAAO,sDAC9CJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,EAQiEM,iBAPjE,SAA0BC,GACtB,OACIV,MAAM,mDAADM,OAAoDI,EAAK,kEACzDT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GAG7C,GAEA,K,4HCjCe,SAASQ,IAAgB,IAADC,EAAAC,EACrCC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZX,GAAYe,EAAAA,EAAAA,MAAZf,QACFgB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAA2B,QAArBZ,EAAe,QAAfC,EAACQ,EAASI,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,YAAI,IAAAd,EAAAA,EAAI,MAOhDe,EAAAA,EAAAA,YAAU,WACJtB,GACJP,EAAAA,EAAAA,YAAgBO,GACbJ,MAAK,SAAA2B,GACJT,EAAQS,EACV,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,GAAG,CAACzB,IACJ,IAAQ4B,EAAyDf,EAAzDe,cAAeC,EAA0ChB,EAA1CgB,MAAOC,EAAmCjB,EAAnCiB,aAAcC,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OACtD,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAInB,EAASoB,QAAQJ,SAAC,aAC5BC,EAAAA,EAAAA,KAAA,OACEI,IACEX,EAAa,mCAAA3B,OAC0B2B,GAlB7C,qEAqBIY,MAAO,IACPC,IAAKZ,KAEPM,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,KACLI,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaJ,MAChBK,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,KACJE,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,SAEDF,GACCA,EAAOU,KAAI,SAAAC,GACT,OAAOR,EAAAA,EAAAA,KAAA,MAAAD,SAAoBS,EAAMC,MAAjBD,EAAME,GACxB,QAEJZ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACG,IAAI,yBAELC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,kBAGvBC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,MAGb,C","sources":["filmAPI.js","pages/MovieDetails.jsx"],"sourcesContent":["\n\n function filmAPI(){\n  return (\n      fetch(\n          `https://api.themoviedb.org/3/trending/movie/week?api_key=8817625a99e963f36ab0e1c9bab55397`\n      ).then(response => response.json())\n  )\n}\nfunction getFilmById(movieId) {\n     return (\n         fetch(\n             `https://api.themoviedb.org/3/movie/${movieId}?api_key=8817625a99e963f36ab0e1c9bab55397`\n    ).then(response => response.json()))\n}\n\n// /movies/get-movie-details \nfunction getMovieCredits(movieId) {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    )\n    \n}\nfunction getReviews(movieId) {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    ) \n    \n}\nfunction getMovieToSearch(query) {\n    return (\n        fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&api_key=8817625a99e963f36ab0e1c9bab55397`)\n            .then(response => response.json())\n    )\n\n}\nconst API = { filmAPI, getFilmById, getMovieCredits, getReviews, getMovieToSearch }\nexport default API\n","import React from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport API from 'filmAPI';\nimport { useEffect, useState } from 'react';\nimport { useRef } from 'react';\n\nexport default function MovieDetails() {\n  const [data, setData] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n\n  const defaultImg =\n    'https://cannamazoo.com/assets/defaults/img/default-product-img.jpg';\n\n\n  useEffect(() => {\n    if(!movieId){return}\n    API.getFilmById(movieId)\n      .then(info => {\n        setData(info);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n  const { backdrop_path, title, vote_average, overview, genres } = data;\n  return (\n    <div>\n      <Link to={backLink.current}>Go Back</Link>\n      <img\n        src={\n          backdrop_path\n            ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n            : defaultImg\n        }\n        width={250}\n        alt={title}\n      />\n      <h2>{title}</h2>\n      <p>User score: {vote_average}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <ul>\n        Genres\n        {genres &&\n          genres.map(genre => {\n            return <li key={genre.id}>{genre.name}</li>;\n          })}\n      </ul>\n      <ul>\n        {' '}\n        Addiction information\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["API","filmAPI","fetch","then","response","json","getFilmById","movieId","concat","getMovieCredits","getReviews","getMovieToSearch","query","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","data","setData","useParams","location","useLocation","backLink","useRef","state","from","useEffect","info","catch","err","console","error","backdrop_path","title","vote_average","overview","genres","_jsxs","children","_jsx","Link","to","current","src","width","alt","map","genre","name","id","Outlet"],"sourceRoot":""}